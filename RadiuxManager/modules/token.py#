import asyncio
import random
import string
from pyrogram import Client, filters
from RadiuxManager import pbot as app

# Dictionary to store user IDs and their tokens
user_tokens = {}

# Function to check if a token is generated by the bot
def is_valid_token(token):
    return token in user_tokens.values()

@app.on_message(filters.command("token", prefixes="/") & filters.private)
async def generate_token(client, message):
    user_id = message.from_user.id
    if user_id not in user_tokens:
        # Generate a new token for the user
        token = 'Adi_' + ''.join(random.choices(string.ascii_uppercase + string.digits, k=5)) + '_iux'
        user_tokens[user_id] = token
    else:
        # Retrieve user's existing token
        token = user_tokens[user_id]
    response = f"Your token: `{token}`\n\nBy -- Iconic Robot"
    await message.reply(response, parse_mode='markdown')

@app.on_message(filters.command("ctoken", prefixes="/") & filters.private)
async def check_token(client, message):
    token_to_check = message.text.split(maxsplit=1)[1]
    if is_valid_token(token_to_check):
        await message.reply("This token was generated by the bot.")
    else:
        await message.reply("This token was not generated by the bot.")

app.run()
